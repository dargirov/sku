@model Product.Presenters.Dtos.IndexViewModel

@{
    ViewData["Title"] = "Products list";
}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@Html.Partial("_MenuPartial")

<section id="module-content">

    @*@await Component.InvokeAsync("Breadcrumb", new { controller = "Product" })*@

    <div id="search-criteria">
        <div>
            <h2>@Localizer["Product Search"]</h2>
        </div>
        <div>
            <form method="post" asp-controller="product" asp-action="index">
                <div>
                    <label asp-for="SearchCriteria.Name">@Localizer["Name"]</label>
                    <input asp-for="SearchCriteria.Name">
                </div>
                <div>
                    <label asp-for="SearchCriteria.StoreId">@Localizer["Store"]</label>
                    <select asp-for="SearchCriteria.StoreId" asp-items="Model.SearchCriteria.Stores"></select>
                </div>
                <div>
                    <label asp-for="SearchCriteria.CategoryId">@Localizer["Category"]</label>
                    <select asp-for="SearchCriteria.CategoryId" asp-items="Model.SearchCriteria.Categories"></select>
                </div>
                <div>
                    <label asp-for="SearchCriteria.ManufacturerId">@Localizer["Manufacturer"]</label>
                    <select asp-for="SearchCriteria.ManufacturerId" asp-items="Model.SearchCriteria.Manufacturers"></select>
                </div>
                <div>
                    <label asp-for="SearchCriteria.SupplierId">@Localizer["Supplier"]</label>
                    <select asp-for="SearchCriteria.SupplierId" asp-items="Model.SearchCriteria.Suppliers"></select>
                </div>
                <div>
                    <label asp-for="SearchCriteria.Description">@Localizer["Description"]</label>
                    <input asp-for="SearchCriteria.Description">
                </div>
                <div></div>
                <input type="submit" value="">
            </form>
        </div>
        <div id="search-criteria-actions">
            <a asp-controller="product" asp-action="index"><i class="fas fa-times"></i> @Localizer["Clear"]</a>
            <a href="#disabled" class="action-primary action-submit"><i class="fas fa-search"></i> @Localizer["Search"]</a>
        </div>
    </div>

    <div id="search-result">
        <div>
            <h2>@Localizer["Products"]</h2>
        </div>
        <table id="search-result-table" data-url="@Url.Action("index", "product")" data-product-url="@Url.Action("edit", "product")">
            <thead>
                <tr>
                    <th><input type="checkbox" id="row-checkbox-all"></th>
                    <th>@Localizer["Picture"]</th>
                    <th>@Localizer["Name"]</th>
                    <th>@Localizer["Category"]</th>
                    <th>@Localizer["Manufacturer"]</th>
                    <th>@Localizer["Modified on"]</th>
                    <th>@Localizer["Quantity"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.Products.products)
                {
                    <tr>
                        <td><input type="checkbox" data-product-id="@product.Id" class="row-checkbox"></td>
                        <td>
                            @if (product.Pictures != null && product.Pictures.Any())
                            {
                                <img src="@Url.Action("Index", "ContentServer", new { id = product.Pictures.FirstOrDefault()?.Thumb.Guid, area = string.Empty })">
                            }
                        </td>
                        <td><a asp-area="sku" asp-controller="product" asp-action="edit" asp-route-id="@product.Id">@product.Name</a></td>
                        <td>@product.Category.Name</td>
                        <td>@product.Manufacturer.Name</td>
                        <td>@((product.ModifiedOn ?? product.CreatedOn).ToString("dd.MM.yyyy"))</td>
                        <td>
                            <ul class="product-table-quantity">
                                @foreach (var stock in product.Variants.SelectMany(x => x.Stocks))
                                {
                                    <li>
                                        @stock.Store.Name
                                        <span class="product-quantity-label">@stock.Quantity / @stock.LowQuantity</span>
                                    </li>
                                }

                            </ul>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="7">
                        <div class="table-footer-wrapper">
                            <div>Показани @Model.Products.pageData.ResultsFrom до @Model.Products.pageData.ResultsTo от @Model.Products.pageData.TotalResults разултата</div>
                            <div>
                                @await Component.InvokeAsync("Pager", new { action = "index", pageData = Model.Products.pageData })
                            </div>
                        </div>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>

    <div>
        <a href="#disabled" class="btn-delete hidden" id="delete-selected-btn" data-url="@Url.Action("Delete")"><i class="fa fa-trash-o" aria-hidden="true"></i> @Localizer["Delete"]</a>
    </div>

</section>

@section scripts {
    <script src="~/js/product.js" asp-append-version="true"></script>
}