<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Category" xml:space="preserve">
    <value>Категория</value>
  </data>
  <data name="Code that uniquely identifies the product" xml:space="preserve">
    <value>Уникален код, който еднозначно определя продукта</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Добави</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Описание</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Име</value>
  </data>
  <data name="Price Customer" xml:space="preserve">
    <value>Продажна цена</value>
  </data>
  <data name="Price Net" xml:space="preserve">
    <value>Доставна цена</value>
  </data>
  <data name="Provider" xml:space="preserve">
    <value>Доставчик</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Количество</value>
  </data>
  <data name="Stores" xml:space="preserve">
    <value>Складове</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>Склад</value>
  </data>
  <data name="Upload picture" xml:space="preserve">
    <value>Снимка</value>
  </data>
  <data name="Warranty" xml:space="preserve">
    <value>Гаранция</value>
  </data>
  <data name="Product description" xml:space="preserve">
    <value>Информация за продукт</value>
  </data>
  <data name="Supplier" xml:space="preserve">
    <value>Доставчик</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Редактирай</value>
  </data>
  <data name="Variants" xml:space="preserve">
    <value>Варианти</value>
  </data>
  <data name="Variant code" xml:space="preserve">
    <value>Код на вариант</value>
  </data>
  <data name="Low Quantity" xml:space="preserve">
    <value>Минимално количество</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>Информация</value>
  </data>
  <data name="Pictures" xml:space="preserve">
    <value>Снимки</value>
  </data>
  <data name="qty" xml:space="preserve">
    <value>брой</value>
  </data>
  <data name="gram" xml:space="preserve">
    <value>грам</value>
  </data>
  <data name="kilogram" xml:space="preserve">
    <value>килограм</value>
  </data>
  <data name="liter" xml:space="preserve">
    <value>литър</value>
  </data>
  <data name="quadrate" xml:space="preserve">
    <value>квадрат</value>
  </data>
  <data name="meter" xml:space="preserve">
    <value>метър</value>
  </data>
  <data name="Quantity measure type is required" xml:space="preserve">
    <value>Изберете мерна единица за количество</value>
  </data>
  <data name="Low quantity measure type is required" xml:space="preserve">
    <value>Изберете мерна единица за минимално количество</value>
  </data>
  <data name="Quantity is required" xml:space="preserve">
    <value>Изберете количество</value>
  </data>
  <data name="Low Quantity is required" xml:space="preserve">
    <value>Изберете минимално количество</value>
  </data>
  <data name="Price net is required" xml:space="preserve">
    <value>Изберете доставна цена</value>
  </data>
  <data name="Price customer is required" xml:space="preserve">
    <value>Изберете продажна цена</value>
  </data>
  <data name="Code is required" xml:space="preserve">
    <value>Изберете код на вариант</value>
  </data>
</root>